---
schema_version: "0.1.0"

sources:
- id: symfony_example
  clone_url: "https://github.com/boldare/feater-symfony-example.git"
  use_deploy_key: false
  reference:
    type: branch
    name: master
  before_build_tasks:
  - type: copy
    source_relative_path: "app/config/parameters.yml.feater.dist"
    destination_relative_path: "app/config/parameters.yml"
  - type: interpolate
    relative_path: "app/config/parameters.yml"
  - type: copy
    source_relative_path: "web/app_dev.php.dist"
    destination_relative_path: "web/app_dev.php"

source_volumes:
- id: symfony_example
  source_id: symfony_example

asset_volumes:
- id: test_db
  asset_id: test_db_volume
- id: test_elasticsearch
  asset_id: test_elasticsearch_volume

env_variables:
- name: SYMFONY_ENV
  value: dev

- name: DATABASE_USER
  value: user

- name: DATABASE_PASSWORD
  value: pass

- name: DATABASE_NAME
  value: employees

- name: ELASTICSEARCH_INDEX_NAME
  value: sample

compose_files:
- source_id: symfony_example
  env_dir_relative_path: .docker
  compose_file_relative_paths:
  - ".docker/docker-compose.base.yml"
  - ".docker/docker-compose.feater.yml"

after_build_tasks:
- type: execute_service_command
  id: filesystem_acl
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/filesystem-acl.sh"]
- type: execute_service_command
  id: build
  depends_on:
  - filesystem_acl
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/build.sh"]
- type: execute_service_command
  id: dummy_a
  depends_on:
  - build
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/after-build-task-success.sh 5"]
- type: execute_service_command
  id: dummy_b1
  depends_on:
  - dummy_a
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/after-build-task-success.sh 15"]
- type: execute_service_command
  id: dummy_b2
  depends_on:
  - dummy_a
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/after-build-task-success.sh 10"]
- type: execute_service_command
  id: dummy_b3
  depends_on:
  - dummy_a
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/after-build-task-success.sh 5"]
- type: execute_service_command
  id: dummy_c1
  depends_on:
  - dummy_b1
  - dummy_b2
  - dummy_b3
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/after-build-task-success.sh 10"]
- type: execute_service_command
  id: dummy_c2
  depends_on:
  - dummy_b1
  - dummy_b2
  - dummy_b3
  service_id: symfony_app
  inherited_env_variables: []
  custom_env_variables: []
  command: ["bash", "-c", "./scripts/after-build-task-success.sh 5"]

proxied_ports:
- id: sf
  service_id: symfony_app
  port: 8000
  name: Symfony application
- id: mail
  service_id: symfony_mailcatcher
  port: 1080
  name: Mailcatcher
- id: adminer
  service_id: symfony_adminer
  port: 8080
  name: Adminer

summary_items:
- name: Symfony is app available at
  value: http://{{{proxy_domain__sf}}}
- name: Mailcatcher is available at
  value: http://{{{proxy_domain__mail}}}
- name: Adminer is available at
  value: http://{{{proxy_domain__adminer}}}
- name: Database DSN
  value: mysql://{{{env__database_user}}}:{{{env__database_password}}}@symfony_db/{{{env__database_name}}}
